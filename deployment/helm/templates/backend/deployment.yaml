kind: Deployment
apiVersion: apps/v1
metadata:
  name: ytf-backend-deployment
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: ytf-backend
  template:
    metadata:
      labels:
        app: ytf-backend
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.github }}

# When creating a dedicated database, we want to ensure we are waiting for the correct database, so we don't seed the wrong one.
{{- if .Values.database.create }}
      initContainers:
        - name: check-db-ready
          image: postgres:13-alpine
          command: ['sh', '-c', 'until pg_isready -h ytf-database-service -p 5432 -U yesbot; do echo waiting for database; sleep 2; done;']
{{- end }}

      containers:
        - name: ytf-backend
          image: {{ .Values.backend.deployment.image.name }}:{{ .Values.backend.deployment.image.tag }}
          ports:
            - name: public
              containerPort: 5000
            - name: yesbot
              containerPort: 5001
            - name: yesbot-schema
              containerPort: 5002
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            exec:
              command:
                - wget
                - '--post-data=""'
                - http://localhost:5002/_yesbot-schema
                - '-O'
                - /dev/null
                - '-q'
          env:
            - name: NODE_ENV
              value: production
            - name: DISCORD_SCOPES
              value: "identify,guilds.join"
            - name: CMS_ENDPOINT
              value: "http://ytf-cms-service/api/graphql"
            - name: FRONTEND_HOST
              value: https://{{ .Values.common.baseDomain }}

            {{- range .Values.backend.secret.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: ytf-backend-secret
                  key: {{ .name }}
            {{- end }}
